name: CI/CD workflow

on:
  push:
    branches: main

env:
  SERVER_USER: ${{ secrets.SERVER_USER }}
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SSH_KEY_VPS: ${{ secrets.SSH_KEY_VPS }}

jobs:
  check-tests-backend:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: install nodejs
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: ./server/package.json
      - name: install dependency
        run: npm ci --prefer-offline
      - name: verify code
        run: npm run lint
      - name: check packages vulerabilities
        run: npm audit
      - name: execute test
        run: npm run test:ci
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: st2f/node-vue-cicd

  check-frontend:
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: install nodejs
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: ./client/package.json
      - name: install dependency
        run: npm ci --prefer-offline
      - name: verify code
        run: npm run lint
      - name: check packages vulerabilities
        run: npm audit
  
  build-frontend:
    needs: check-frontend
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ./client
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: install nodejs
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: ./client/package.json
      - name: install dependency
        run: npm ci --prefer-offline
      - name: build app front-end
        run: |
          npm run build
          pwd
          ls
      - name: build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: ./client/dist
          if-no-files-found: error 

  test-e2e-frontend:
    needs: build-frontend
    runs-on: ubuntu-24.04
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: get artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: ./client/dist
      - name: install nodejs
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: ./server/package.json
      - name: install dependency
        run: |
          cd ./server
          npm ci --prefer-offline
      - name: start server
        run: |
          cd ./server
          npm start &
      - name: run cypress
        uses: cypress-io/github-action@v6
        with:
          working-directory: ./client
          browser: chrome
          start: npm run-preview
          wait-on: http://localhost:4173
          wait-on-timeout: 60
          config: baseUrl=http://localhost:4173

  deploy:
    needs: [check-tests-backend, test-e2e-frontend]
    runs-on: ubuntu-24.04
    steps:
      - name: checkout code
        uses: actions/checkout@v4
      - name: get artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: ./client/dist
      - name: server deploy
        run: |
          mkdir -p ~/.ssh
          eval $(ssh-agent -s)
          ssh-add - <<< "$SSH_KEY_VPS"
          ssh-keyscan -t rsa -H $SERVER_IP >> ~/.ssh/known_hosts
          scp -r ./server $SERVER_USER@$SERVER_IP:/var/www
          scp -r ./client/dist $SERVER_USER@$SERVER_IP:/var/www
          ssh $SERVER_USER@$SERVER_IP "cd /var/www/server && npm install --omit=dev"
          ssh $SERVER_USER@$SERVER_IP "cd /var/www/server && pm2 startOrRestart ecosystem.config.js --env production & pm2 save"
